global:
  resolve_timeout: 5m

# Templates for notification formatting
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root route with all parameters inherited by child routes
route:
  # Group alerts by these labels
  group_by: ['alertname', 'severity', 'component']

  # How long to wait before sending the initial notification
  group_wait: 10s

  # How long to wait before sending notification about new alerts added to a group
  group_interval: 10s

  # How long to wait before sending a notification again if it has already been sent
  repeat_interval: 4h

  # Default receiver
  receiver: 'default'

  # Child routes (can be customized based on severity)
  routes:
    # Critical alerts - send immediately
    - match:
        severity: critical
      receiver: 'critical'
      group_wait: 5s
      repeat_interval: 1h

    # Warning alerts - can be grouped
    - match:
        severity: warning
      receiver: 'warning'
      group_wait: 30s
      repeat_interval: 4h

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # If critical alert is firing, suppress warning for same alertname
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'component']

# Receivers define notification destinations
receivers:
  # Default receiver - logs only (fallback)
  - name: 'default'
    webhook_configs:
      - url: 'http://localhost:9093/api/v1/alerts'  # Placeholder - logs to Alertmanager
        send_resolved: true

  # Critical alerts receiver
  - name: 'critical'
    # Webhook configuration (e.g., for Slack, Discord, custom endpoint)
    webhook_configs:
      - url: 'http://host.docker.internal:7000/api/webhook/alerts'
        send_resolved: true
        http_config:
          follow_redirects: true

    # Email configuration (uncomment and configure if needed)
    # email_configs:
    #   - to: 'alerts@yourdomain.com'
    #     from: 'prometheus@yourdomain.com'
    #     smarthost: 'smtp.gmail.com:587'
    #     auth_username: 'your-email@gmail.com'
    #     auth_password: 'your-app-password'
    #     headers:
    #       Subject: '[CRITICAL] {{ .GroupLabels.alertname }}'

    # Slack configuration (uncomment and configure if needed)
    # slack_configs:
    #   - api_url: 'https://hooks.slack.com/services/YOUR/WEBHOOK/URL'
    #     channel: '#alerts'
    #     title: 'Critical Alert: {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
    #     send_resolved: true

  # Warning alerts receiver
  - name: 'warning'
    webhook_configs:
      - url: 'http://host.docker.internal:7000/api/webhook/alerts'
        send_resolved: true
        http_config:
          follow_redirects: true

    # Email for warnings (optional, usually less urgent)
    # email_configs:
    #   - to: 'warnings@yourdomain.com'
    #     from: 'prometheus@yourdomain.com'
    #     smarthost: 'smtp.gmail.com:587'
    #     auth_username: 'your-email@gmail.com'
    #     auth_password: 'your-app-password'
    #     headers:
    #       Subject: '[WARNING] {{ .GroupLabels.alertname }}'
